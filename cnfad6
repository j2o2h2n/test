student

package hibe_exp;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;

@Entity
@Table(name = "student")
public class Student {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Auto-increment ID
    private int id;

//    @Column(nullable = false)
//    @NotBlank(message = "Name cannot be blank")
//    @Size(min = 2, max = 50, message = "Name must be between 2 and 50 characters")
    private String name;

//    @Column(nullable = false)
//    @NotBlank(message = "Address cannot be blank")
//    @Size(min = 5, max = 100, message = "Address must be between 5 and 100 characters")
    private String address;

//    @Column(nullable = false)
//    @Min(value = 0, message = "Total marks must be at least 0")
//    @Max(value = 100, message = "Total marks cannot exceed 100")
    private int totalMarks;

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public int getTotalMarks() {
        return totalMarks;
    }

    public void setTotalMarks(int totalMarks) {
        this.totalMarks = totalMarks;
    }

    @Override
    public String toString() {
        return "Student [id=" + id + ", name=" + name + ", address=" + address + ", totalMarks=" + totalMarks + "]";
    }
}

------------------------------------------------------------------------------------------------------------------------

hibe_test

package hibe_exp;

import java.util.List;
import java.util.Scanner;
import jakarta.validation.*;
import java.util.Set;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;

public class hibe_test {
	public Session getSession() {
		SessionFactory sFactory = new Configuration().configure("hibernate-config.cfg.xml").buildSessionFactory();
		Session session = sFactory.openSession();
		return session;
	}
	
	public void insert(String name, String address, int totalMarks) {
		Student student = new Student();
		student.setAddress(address);
		student.setName(name);
		student.setTotalMarks(totalMarks);
		Session s = getSession();
		Transaction t = s.beginTransaction();
		s.save(student);
		t.commit();
		s.close();
	}
	
	public List<Student> display(){
		Session session = getSession();
		Query query = session.createQuery("from Student");
		List<Student> students = query.getResultList();
		return students;
	}
	
	public void search(String name) {
		Session s = getSession();
		Transaction transaction = s.beginTransaction();
		Query query = s.createQuery("select s from Student s where s.name = :name", Student.class);
		query.setParameter("name", name);
		System.out.println(query.list());
		transaction.commit();
		s.close();
	}
	public void delete(String name) {
		Session s = getSession();
		Transaction transaction = s.beginTransaction();
		Query query = s.createQuery("delete from Student s where s.name = :name");
		query.setParameter("name", name);
		int status = query.executeUpdate();
		System.out.println("Rows Deleted: " + status);
		transaction.commit();
		s.close();
	}
	
	
	public static void main(String[] args) {
		hibe_test hb = new hibe_test();
		Scanner scanner = new Scanner(System.in);
		
		while(true) {
			System.out.println("----------------MENU-----------------");
			System.out.println("1. Insert");
			System.out.println("2. Search");
			System.out.println("3. Display");
			System.out.println("4. Delete");
			System.out.println("5. Exit");
			System.out.println("Enter your Choice :  ");
			int choice = scanner.nextInt();
			switch (choice) {
			case 1:
				System.out.println("Enter the Student Details:-");
				System.out.println("Enter name = ");
				String name = scanner.next();
				System.out.println("Enter address = ");
				String address = scanner.next();
				System.out.println("Enter TotalMarks = ");
				int totalMarks = scanner.nextInt();
				hb.insert( name, address, totalMarks);
				break;
			case 2:
				System.out.println("Enter name = ");
				String name1 = scanner.next();
				hb.search(name1);
				break;
			case 3:
				System.out.println(hb.display());
				break;
			case 4:
				System.out.println("Enter name = ");
				String name2 = scanner.next();
				hb.delete(name2);
				break;
			case 5:
				System.exit(0);
			default:
				break;
			}
		}
	}
}


--------------------------------------------------------------  inside resourses

student.hbm,xml

<?xml version='1.0' encoding='UTF-8'?>    
<hibernate-mapping>
    <class name="hibe_exp.Student" table="student">
        <id name="id" type="int" column="id">
            <generator class="native" />
        </id>
        <property name="name" column="name" type="string" />
        <property name="address" column="address" type="string" />
        <property name="totalMarks" column="totalMarks" type="int" />
    </class>
</hibernate-mapping>

-------------------------------------------------------------------------------    they will noly give


hibernate-config.conf.xml


<?xml version='1.0' encoding='UTF-8'?>  

<hibernate-configuration>  
   <session-factory>  
      <property name="hbm2ddl.auto">update</property>  
      <property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>  
      <property name="connection.url">jdbc:mysql://localhost:3306/mca039</property>  
      <property name="hibernate.connection.username">mca039</property>
 	  <property name="hibernate.connection.password">Password@123</property>  
      <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>  
      <mapping resource="student.hbm.xml"/>  
   </session-factory>  
</hibernate-configuration>



